/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { Html, useGLTF } from "@react-three/drei";
import { Div1 } from "./styles";

export default function Model(props) {
  const group = useRef();
  const rca = useRef();
  const lad = useRef();
  const lm = useRef();
  const lcx = useRef();
  const om = useRef();
  const septal = useRef();
  const diagonal1 = useRef();
  const diagonal2 = useRef();
  const diagonal3 = useRef();
  const rma = useRef();
  const pda = useRef();
  const { nodes } = useGLTF("/prod/newLeftHeart.gltf");
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.LM.geometry}
        material={nodes.LM.material}
        position={[1.12, 0.49, 0]}
        ref={lm}
      >
        <Html position={[-0.8, 0, 0.3]} zIndexRange={[900, 0]}>
          <Div1
            content="LM"
            onClick={props.handleClick}
            onMouseEnter={() => props.onHover([lm])}
            onMouseLeave={() => props.onHover(null)}
          >
            1
          </Div1>
        </Html>
      </mesh>
      <mesh
        geometry={nodes.LAD.geometry}
        material={nodes.LAD.material}
        position={[0, 0, 1.5]}
        ref={lad}
      >
        <Html position={[0.6, 0.2, -0.85]} zIndexRange={[900, 0]}>
          <Div1
            content="LAD"
            onClick={props.handleClick}
            onMouseEnter={() => props.onHover([lad])}
            onMouseLeave={() => props.onHover(null)}
          >
            3
          </Div1>
        </Html>
      </mesh>
      <mesh
        geometry={nodes.septal.geometry}
        material={nodes.septal.material}
        position={[-1.36, 0.05, 0.7]}
        ref={septal}
      >
        <Html position={[1.85, -0.5, 0.5]} zIndexRange={[900, 0]}>
          <Div1
            content="Septal"
            onClick={props.handleClick}
            onMouseEnter={() => props.onHover([septal])}
            onMouseLeave={() => props.onHover(null)}
          >
            4
          </Div1>
        </Html>
      </mesh>
      <mesh
        geometry={nodes.diaginal1.geometry}
        material={nodes.diaginal1.material}
        position={[-0.03, 0.06, 0.09]}
        ref={diagonal1}
      >
        <Html position={[1.3, -0.53, 0.5]} zIndexRange={[900, 0]}>
          <Div1
            content="Diagonal"
            onClick={props.handleClick}
            onMouseEnter={() =>
              props.onHover([diagonal1, diagonal2, diagonal3])
            }
            onMouseLeave={() => props.onHover(null)}
          >
            8
          </Div1>
        </Html>
        <Html position={[1.2, -0.68, 0.75]} zIndexRange={[900, 0]}>
          <Div1
            content="Diagonal"
            onClick={props.handleClick}
            onMouseEnter={() =>
              props.onHover([diagonal1, diagonal2, diagonal3])
            }
            onMouseLeave={() => props.onHover(null)}
          >
            8
          </Div1>
        </Html>
      </mesh>
      <mesh
        geometry={nodes.diaginal2.geometry}
        material={nodes.diaginal2.material}
        position={[-0.31, -0.29, 2.24]}
        ref={diagonal2}
      >
        <Html position={[1.35, -0.5, -1.25]} zIndexRange={[900, 0]}>
          <Div1
            content="Diagonal"
            onClick={props.handleClick}
            onMouseEnter={() =>
              props.onHover([diagonal1, diagonal2, diagonal3])
            }
            onMouseLeave={() => props.onHover(null)}
          >
            8
          </Div1>
        </Html>
      </mesh>
      <mesh
        geometry={nodes.diaginal3.geometry}
        material={nodes.diaginal3.material}
        position={[-0.31, -0.89, 2.28]}
        ref={diagonal3}
      >
        <Html position={[1.25, -0.37, -1.2]} zIndexRange={[900, 0]}>
          <Div1
            content="Diagonal"
            onClick={props.handleClick}
            onMouseEnter={() =>
              props.onHover([diagonal1, diagonal2, diagonal3])
            }
            onMouseLeave={() => props.onHover(null)}
          >
            8
          </Div1>
        </Html>
      </mesh>
      <mesh
        geometry={nodes.aorta_new.geometry}
        material={nodes.aorta_new.material}
        position={[0.67, 0.06, 0.71]}
      />
      <mesh
        geometry={nodes.RMA.geometry}
        material={nodes.RMA.material}
        position={[-1.52, -0.47, 1.07]}
        ref={rma}
      >
        <Html position={[1.0, -0.35, -0.1]} zIndexRange={[900, 0]}>
          <Div1
            content="RMA"
            onClick={props.handleClick}
            onMouseEnter={() => props.onHover([rma])}
            onMouseLeave={() => props.onHover(null)}
          >
            6
          </Div1>
        </Html>
      </mesh>
      <mesh
        geometry={nodes.PDAtail.geometry}
        material={nodes.PDAtail.material}
        position={[1.68, -1.95, 0.88]}
        ref={pda}
      >
        <Html position={[-1.8, 1, -0.71]} zIndexRange={[900, 0]}>
          <Div1
            content="PDA"
            onClick={props.handleClick}
            onMouseEnter={() => props.onHover([pda])}
            onMouseLeave={() => props.onHover(null)}
          >
            7
          </Div1>
        </Html>
      </mesh>
      <mesh
        geometry={nodes.Rbig2.geometry}
        material={nodes.Rbig2.material}
        position={[0.12, -0.39, 0.33]}
        ref={om}
      >
        <Html position={[0.9, -0.2, -0.55]} zIndexRange={[900, 0]}>
          <Div1
            content="OM"
            onClick={props.handleClick}
            onMouseEnter={() => props.onHover([om])}
            onMouseLeave={() => props.onHover(null)}
          >
            9
          </Div1>
        </Html>
      </mesh>

      <mesh
        geometry={nodes.RCA.geometry}
        material={nodes.RCA.material}
        position={[1.12, 0.49, 0]}
        ref={rca}
      >
        <Html position={[-1.6, -0.49, 0.85]} zIndexRange={[900, 0]}>
          <Div1
            content="RCA"
            onClick={props.handleClick}
            onMouseEnter={() => props.onHover([rca])}
            onMouseLeave={() => props.onHover(null)}
          >
            5
          </Div1>
        </Html>
      </mesh>
      <mesh
        geometry={nodes.LCx.geometry}
        material={nodes.LCx.material}
        position={[1.12, 0.49, 0]}
        ref={lcx}
      >
        <Html position={[-0.25, -0.49, 0]} zIndexRange={[900, 0]}>
          <Div1
            content="LCx"
            onClick={props.handleClick}
            onMouseEnter={() => props.onHover([lcx])}
            onMouseLeave={() => props.onHover(null)}
          >
            2
          </Div1>
        </Html>
      </mesh>
    </group>
  );
}

useGLTF.preload("/prod/newLeftHeart.gltf");
