/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, Html } from "@react-three/drei";
import styled from "styled-components";

export default function Model(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/prod/heart.gltf");
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.aorta_new.geometry}
        material={materials.red}
        position={[0.67, 0.06, 0.71]}
      >
        <Html position={[-0.4, 0.5, -0.35]} occlude>
          <Div1 content="LM">1</Div1>
        </Html>
        <Html position={[0.3, 0, -0.71]}>
          <Div1 content="LCx">2</Div1>
        </Html>
        <Html>
          <Div1 content="LAD">3</Div1>
        </Html>
        <Html position={[-0.2, -0.5, 0.5]}>
          <Div1 content="Septal">4</Div1>
        </Html>
        <Html position={[-1.1, 0, 0]}>
          <Div1 content="RCA">5</Div1>
        </Html>
        <Html position={[-0.8, -1.1, 0.5]}>
          <Div1 content="RMA">6</Div1>
        </Html>
        <Html position={[-0.8, -1.1, -0.71]}>
          <Div1 content="PDA">7</Div1>
        </Html>
        <Html position={[-0.8, -0.8, -0.9]}>
          <Div1 content="PL">8</Div1>
        </Html>
        <Html position={[0.5, -0.75, 0.1]}>
          <Div1 content="Diagonal">8</Div1>
        </Html>
        <Html position={[0.6, -0.5, -0.1]}>
          <Div1 content="Diagonal">8</Div1>
        </Html>
        <Html position={[0.4, -0.85, 0.3]}>
          <Div1 content="Diagonal">8</Div1>
        </Html>
        <Html position={[0.3, -1.35, 0.3]}>
          <Div1 content="Diagonal">8</Div1>
        </Html>
      </mesh>
    </group>
  );
}

useGLTF.preload("/prod/heart.gltf");

const Div1 = styled.div`
  position: absolute;
  width: 30px;
  height: 30px;
  border: 2px solid #fff;
  border-radius: 50%;
  font-size: 16px;
  line-height: 30px;
  text-align: center;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  transition: 0.5s;
  cursor: pointer;

  &: hover {
    color: #87ceeb;
    border-color: #87ceeb;

    &::after {
      position: absolute;
      top: 10;
      left: 10;
      z-index: 1;
      margin-left: 15px;
      margin-top: 15px;
      padding: 1em;
      color: #fff;
      background: rgba(0, 0, 0, 0.8);
      border-radius: 0.5em;
      font-size: 12px;
      line-height: 1.2;
      content: "${(props) => props.content}";
    }
  }

  &:active {
    opacity: 0.8;
  }
`;
